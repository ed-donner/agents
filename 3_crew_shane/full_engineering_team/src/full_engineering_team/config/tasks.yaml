architect_task:
  description: >
    Design the system architecture for the engineering team, ensuring that the system is modular and maintainable.
    Take the high level requirements described here and prepare a more detailed design;
    create files only as needed; describe the function and method signatures in the files as needed.
    Here are the requirements: {requirements}
    Deploy other lead engineers to help you with the task.
  expected_output: >
    A more detailed design for the architect, identifying the classes and functions in the module.
    The design will be available in a file called output/architecture.md in the root directory of the project.
  agent: architect

backend_lead_engineer_task:
  description: >
    Design the backend architecture for the engineering team, ensuring that the backend is modular and maintainable.
    Take the high level requirements described here and prepare a more detailed design;
    create files only as needed; describe the function and method signatures in the files as needed.
    Deploy other backend engineers to help you with the task.
    Here are the requirements: {requirements}
  expected_output: >
    A more detailed design for the backend lead engineer, identifying the classes and functions in the module.
    The design will be available in a file called output/backend_architecture.md in the root directory of the project.
  agent: backend_lead_engineer
  context:
    - architect_task

frontend_lead_engineer_task:
  description: >
    Design the frontend architecture for the engineering team, ensuring that the frontend is modular and maintainable.
    Take the high level requirements described here and prepare a more detailed design;
    create files only as needed; describe the function and method signatures in the files as needed.
    Deploy other frontend engineers to help you with the task.
    Here are the requirements: {requirements}
  expected_output: >
    A more detailed design for the frontend lead engineer, identifying the classes and functions in the module.
    The design will be available in a file called output/frontend_architecture.md in the root directory of the project.
  agent: frontend_lead_engineer
  context:
    - architect_task
  
backend_engineer_task:
  description: >
    Implement the backend architecture for the engineering team, ensuring that the backend is modular and maintainable.
    Take the high level requirements described here and prepare a detailed design;
    create files only as needed; describe the function and method signatures in the files as needed.
    The backend architecture will be available in a file called output/backend_architecture.md in the root directory of the project.
    IMPORTANT: Only output the backend code without any other formatting or commentary. The backend code should be executable as is.
  expected_output: >
    A python module that implements the design and achieves the requirements.
  agent: backend_engineer
  context:
    - backend_lead_engineer_task

frontend_engineer_task:
  description: >
    Implement the frontend architecture for the engineering team, ensuring that the frontend is modular and maintainable.
    Take the high level requirements described here and prepare a detailed design;
    create files only as needed; describe the function and method signatures in the files as needed.
    The frontend architecture will be available in a file called output/frontend_architecture.md in the root directory of the project.
    IMPORTANT: Only output the frontend code without any other formatting or commentary. The frontend code should be executable as is.
  expected_output: >
    A HTML, angular, and / or tailwind css module that implements the design and achieves the requirements.
  agent: frontend_engineer
  context:
    - frontend_lead_engineer_task

backend_test_engineer_task:
  description: >
    Write unit tests for the given backend module and create a test_*name_of_the_backend_module*.py in the same directory as the backend module.
    The backend architecture will be available in a file called output/backend_architecture.md in the root directory of the project.
    IMPORTANT: Only output the test code without any other formatting or commentary. The test code should be executable as is.
  expected_output: >
    A test_*name_of_the_backend_module*.py module that tests the given backend module.
  agent: backend_test_engineer
  context:
    - backend_lead_engineer_task
  output_file: output/test_*name_of_the_backend_module*.py

frontend_test_engineer_task:
  description: >
    Write unit tests for the given frontend module and create a test_*name_of_the_frontend_module* with whatever suffix is appropriate for the test in the same directory as the frontend module.
    The frontend architecture will be available in a file called output/frontend_architecture.md in the root directory of the project.
    IMPORTANT: Only output the test code without any other formatting or commentary. The test code should be executable as is.
  expected_output: >
    A test_*name_of_the_frontend_module* with whatever suffix is appropriate for the test module that tests the given frontend module.
  agent: frontend_test_engineer
  context:
    - frontend_lead_engineer_task
  output_file: output/test_*name_of_the_frontend_module* with whatever suffix is appropriate for the test.